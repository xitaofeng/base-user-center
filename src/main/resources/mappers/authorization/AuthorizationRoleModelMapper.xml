<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shsnc.base.authorization.mapper.AuthorizationRoleModelMapper">

    <!-- 表名用变量表示 -->
    <sql id="tableName">authorization_role</sql>

    <resultMap id="BaseResultMap" type="com.shsnc.base.authorization.model.AuthorizationRoleModel">
        <id column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_code" jdbcType="VARCHAR" property="roleCode"/>
        <result column="is_built" jdbcType="CHAR" property="isBuilt"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
    </resultMap>

    <sql id="BaseColumn">
        role_id,
        role_name,
        role_code,
        is_built,
        description,
        create_time,
        orders
    </sql>

    <insert id="addAuthorizationRoleModel" useGeneratedKeys="true" keyProperty="roleId" keyColumn="role_id">
        INSERT INTO
        <include refid="tableName"/>
        (
        role_name,
        role_code,
        is_built,
        description,
        create_time,
        orders
        )
        VALUES
        (
        #{roleName},
        #{roleRole},
        #{isBuilt},
        #{description},
        #{createTime},
        #{orders}
        )
    </insert>

    <!-- SQL语句格式美化，关键字用大写字母 -->
    <update id="editAuthorizationRoleModel">
        UPDATE
        <include refid="tableName"/>
        SET
        role_name = #{roleName}
        <if test="roleRole !=null and roleRole !=''">
            ,role_code = #{roleRole}
        </if>
        <if test="description !=null and description !=''">
            ,description = #{description}
        </if>
        <if test="orders !=null and orders !=''">
            ,orders = #{orders}
        </if>
        WHERE role_id = #{roleId }
    </update>

    <delete id="batchDeleteAuthorizationRole">
        DELETE FROM
        <include refid="tableName"/>
        WHERE role_id in
        <foreach item="roleId" collection="list" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <select id="getAuthorizationRoleModelByRoleId" resultType="com.shsnc.base.authorization.model.AuthorizationRoleModel">
        SELECT
        <include refid="BaseColumn"/>
        FROM
        <include refid="tableName"/>
        WHERE role_id = #{roleId }
    </select>

    <select id="getAuthorizationRoleModelList" resultType="com.shsnc.base.authorization.model.AuthorizationRoleModel">
        SELECT
        <include refid="BaseColumn"/>
        FROM
        <include refid="tableName"/>
        WHERE 1 = 1
        <include refid="conditionSql"/>
        ORDER BY orders DESC
    </select>

    <select id="getListByRoleName" resultType="com.shsnc.base.authorization.model.AuthorizationRoleModel">
        SELECT
        <include refid="BaseColumn"/>
        FROM
        <include refid="tableName"/>
        WHERE role_name = #{roleName}
    </select>

    <select id="getListByRoleCode" resultType="com.shsnc.base.authorization.model.AuthorizationRoleModel">
        SELECT
        <include refid="BaseColumn"/>
        FROM
        <include refid="tableName"/>
        WHERE role_code = #{roleRole}
    </select>

    <select id="getByRoleId" resultType="com.shsnc.base.authorization.model.AuthorizationRoleModel">
        SELECT
        <include refid="BaseColumn"/>
        FROM
        <include refid="tableName"/>
        WHERE role_id = #{roleId}
    </select>

    <sql id="pageSql">
        <if test="pagination != null" >
            LIMIT #{pagination.start}, #{pagination.pagesize}
        </if>
    </sql>

    <sql id="orderSql">
        <if test="pagination != null and pagination.sorting != null">
            ORDER BY #{pagination.sorting}
        </if>
    </sql>

    <sql id="conditionSql">
        <where>
            <if test="condition != null">
                <if test="condition.roleName !=null and condition.roleName !=''">
                    AND role_name LIKE CONCAT('%', #{condition.roleName}, '%')
                </if>
                <if test="condition.roleCode !=null and condition.roleCode !=''">
                    AND role_code LIKE CONCAT('%', #{condition.roleCode}, '%')
                </if>
                <if test="condition.isBuilt !=null and condition.isBuilt != 0">
                    AND is_built = #{condition.is_built}=
                </if>
                <if test="condition.description !=null and condition.description !=''">
                    AND description LIKE CONCAT('%', #{condition.description}, '%')
                </if>
            </if>
        </where>
    </sql>

    <select id="getTotalCountByCondition" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        <include refid="tableName"/>
        <include refid="conditionSql"/>
    </select>

    <select id="getPageByCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumn"/>
        FROM
        <include refid="tableName"/>
        <include refid="conditionSql"/>
        <include refid="orderSql"/>
        <include refid="pageSql"/>
    </select>

</mapper>